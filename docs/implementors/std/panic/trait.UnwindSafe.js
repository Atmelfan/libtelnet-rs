(function() {var implementors = {};
implementors["libtelnet_rs"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libtelnet_rs/struct.Parser.html\" title=\"struct libtelnet_rs::Parser\">Parser</a>","synthetic":true,"types":["libtelnet_rs::Parser"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libtelnet_rs/compatibility/struct.CompatibilityEntry.html\" title=\"struct libtelnet_rs::compatibility::CompatibilityEntry\">CompatibilityEntry</a>","synthetic":true,"types":["libtelnet_rs::compatibility::CompatibilityEntry"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libtelnet_rs/compatibility/struct.CompatibilityTable.html\" title=\"struct libtelnet_rs::compatibility::CompatibilityTable\">CompatibilityTable</a>","synthetic":true,"types":["libtelnet_rs::compatibility::CompatibilityTable"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libtelnet_rs/events/struct.TelnetIAC.html\" title=\"struct libtelnet_rs::events::TelnetIAC\">TelnetIAC</a>","synthetic":true,"types":["libtelnet_rs::events::TelnetIAC"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libtelnet_rs/events/struct.TelnetNegotiation.html\" title=\"struct libtelnet_rs::events::TelnetNegotiation\">TelnetNegotiation</a>","synthetic":true,"types":["libtelnet_rs::events::TelnetNegotiation"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libtelnet_rs/events/struct.TelnetSubnegotiation.html\" title=\"struct libtelnet_rs::events::TelnetSubnegotiation\">TelnetSubnegotiation</a>","synthetic":true,"types":["libtelnet_rs::events::TelnetSubnegotiation"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libtelnet_rs/events/enum.TelnetEvents.html\" title=\"enum libtelnet_rs::events::TelnetEvents\">TelnetEvents</a>","synthetic":true,"types":["libtelnet_rs::events::TelnetEvents"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()